{
  "profileId": int,
  ipqAnswers: [//first element is answers for primary client, second element is answers for secondary client
    [
      {
        questionId: int,
        answerId: int
      }
    ]
  ],
  clients: [
    {
      priority: integer (0 = primary, 1 = secondary, 2 = tertiary clients who do not affect ipq),
      type: integer (id from the clientTypeOptions in getInitData call),
      address1: string,
      address2: string (optional),
      city: string,
      province: integer,
      postalCode: string
      phone: string(optional),
      fax: string(optional),
      email: string(optional),
      accounts: [
        {
          isNewMoney: boolean,
          accountNumber: integer (8 digits),
          type: integer,
          name: string,
          value: integer,
          marginalTaxRate: 4 digit number(including decimals)
        }
      ],

      //THIS SECTION IS FOR Client-Type = INDIVIDUAL, values will be null or empty string if client-type is not INDIVIDUAL
      title: string,
      firstName: string.
      middleName: string.
      lastName: string,
      dateOfBirder: unix date,
      sin: integer(9 digits)
      taxRate: float(max 4 digits, including decimals)

      //THIS SECTION IS FOR Client-Type = CORPORATE OR TRUST ONLY, values will be null or empty string if client-type is not (Corporate or Trust)
      signingOfficers: [string]
    }
  ],
  porfolio: {//the chosen portfolio, we only need to get/store the information that can be customized, the rest of the info is static and can be retrieved with the call to get all portfolios
    portfolioId: int,
    assetMix: [
      {
        assetClassId: int
        assetClassNameEN: string,
        assetClassNameFR: string,
        percentage: float,
        assetSubClasses: [
          {
            subClassId: int,
            subClassNameEN: string,
            subClassNameFR: string,
            funds: [
              {
                fundId: int,
                fundNameEN: string,
                fundNameFR: string,
                percentage: float
              }
            ]
          }
        ]
      }
    ]
  },
  reports: [int], //array of chosen report IDs
  includeIncomeWedgeStrategy: boolean,//checkbox on fund customization screen
  includeTaxEfficientCashFlow: boolean,//checkbox on fund customization screen
  dealerName: string,
  dealerRepCode: string,
  advisorName: string,
  address1: string,
  address2: string,
  city: string,
  province: string,
  postalCode: string,
  businessPhone: string,
  fax: string,
  email: string
  specialInstructions: string
}